--13
SELECT STU_NO, STU_NAME
FROM STUDENT
WHERE STU_NO IN (
    SELECT STU_NO
    FROM ENROL JOIN SUBJECT ON ENROL.SUB_NO = SUBJECT.SUB_NO
    WHERE SUB_NAME = '시스템분석설계'
    OR SUB_NAME = '소프트웨어공학'
)
ORDER BY 1;

--14
SELECT STU_NO, STU_NAME
FROM STUDENT
WHERE STU_NO IN (
    SELECT STU_NO
    FROM ENROL JOIN SUBJECT USING(SUB_NO)
    WHERE SUB_GRADE = 1
    OR SUB_DEPT = '컴퓨터정보'
);

--15
SELECT STU_NO, STU_NAME
FROM STUDENT
WHERE STU_NO IN (
    SELECT STU_NO
    FROM ENROL NATURAL JOIN SUBJECT
    WHERE SUB_NAME = '기계공작법'
    OR SUB_NAME = '기초전자실험'
)
ORDER BY STU_NO;

--16
SELECT STU_NO
FROM STUDENT
WHERE STU_NO IN (
    SELECT STU_NO
    FROM ENROL JOIN SUBJECT USING(SUB_NO)
    WHERE SUB_PROF = '김태영'
    OR SUB_PROF = '김유석'
);

--17
SELECT STU_NAME, ENR_GRADE
FROM STUDENT RIGHT OUTER JOIN ENROL USING(STU_NO);

--18
SELECT SUB_NAME
FROM SUBJECT
WHERE SUB_NO IN (
    SELECT SUB_NO
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_NAME = '옥한빛'
);

--19
SELECT SUB_NAME
FROM SUBJECT
WHERE SUB_NO IN (
    SELECT SUB_NO
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_GENDER = 'F'
);

--20
SELECT SUB_NAME
FROM SUBJECT
WHERE SUB_NO IN (
    SELECT SUB_NO
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_WEIGHT >= 60
);

--21
SELECT DISTINCT STU_NO, STU_NAME
FROM STUDENT
WHERE STU_NO IN (
    SELECT STU_NO
    FROM ENROL JOIN SUBJECT USING(SUB_NO)
    WHERE SUB_DEPT = '컴퓨터정보'
);

--22
SELECT COUNT(*)
FROM (
    SELECT DISTINCT STU_NO
    FROM STUDENT JOIN ENROL USING(STU_NO)
    WHERE ENR_GRADE >= 70
);

--23
SELECT STU_NAME
FROM STUDENT
WHERE STU_GENDER = 'F' 
AND STU_NO IN (
    SELECT STU_NO
    FROM ENROL JOIN SUBJECT USING(SUB_NO)
    WHERE SUB_PROF = '구봉규'
);

--24
SELECT DISTINCT STU_NO, STU_NAME
FROM STUDENT JOIN ENROL USING(STU_NO)
WHERE ENR_GRADE > (
    SELECT AVG(ENR_GRADE)
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_NAME = '김종헌'
);

--25
SELECT DISTINCT STU_NO, STU_NAME
FROM STUDENT JOIN ENROL USING(STU_NO)
WHERE ENR_GRADE < (
    SELECT AVG(ENR_GRADE)
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_NAME = '김인중'
);

--26
SELECT STU_NO, STU_NAME, SUB_NAME, ENR_GRADE
FROM ENROL
JOIN STUDENT USING(STU_NO)
JOIN SUBJECT USING(SUB_NO)
WHERE ENR_GRADE > (
    SELECT AVG(ENR_GRADE)
    FROM ENROL
);

--27
SELECT DISTINCT STU_NO
FROM STUDENT 
JOIN ENROL USING(STU_NO)
JOIN (
    SELECT SUB_NO AS SUBN, AVG(ENR_GRADE) AS ENRG
    FROM ENROL JOIN STUDENT USING(STU_NO)
    GROUP BY SUB_NO
) ON ENROL.SUB_NO = SUBN
WHERE ENR_GRADE > ENRG;

--28
SELECT STU_DEPT, MAX(ENR_GRADE)
FROM ENROL JOIN STUDENT USING(STU_NO)
GROUP BY STU_DEPT
HAVING MAX(ENR_GRADE) > (
    SELECT MAX(ENR_GRADE)
    FROM ENROL JOIN STUDENT USING(STU_NO)
    WHERE STU_DEPT = '기계'
);

--29
SELECT STU_NO, STU_NAME, AVG(ENR_GRADE)
FROM STUDENT JOIN ENROL USING(STU_NO)
GROUP BY STU_NO, STU_NAME, STU_DEPT
HAVING STU_DEPT = '컴퓨터정보'
ORDER BY 3;

--30
SELECT STU_NO, STU_NAME, ENR_GRADE
FROM STUDENT JOIN ENROL USING(STU_NO)
WHERE SUB_NO = (
    SELECT SUB_NO
    FROM SUBJECT
    WHERE SUB_NAME = '시스템분석설계'
)
ORDER BY 3;

--31
SELECT STU_NO, STU_NAME, COUNT(*)
FROM STUDENT JOIN ENROL USING(STU_NO)
GROUP BY STU_NO, STU_NAME
HAVING COUNT(*) >= 2
ORDER BY 3 DESC;

--32
SELECT STU_NO, STU_NAME, STU_DEPT
FROM STUDENT JOIN ENROL USING(STU_NO)
GROUP BY STU_NO, STU_NAME, STU_DEPT
HAVING COUNT(*) = 1
ORDER BY 3, 1;

--33
SELECT STU_NO, STU_NAME, AVG(ENR_GRADE)
FROM STUDENT JOIN ENROL USING(STU_NO)
GROUP BY STU_NO, STU_NAME
HAVING AVG(ENR_GRADE) = (
    SELECT MAX(AVG(ENR_GRADE))
    FROM STUDENT JOIN ENROL USING(STU_NO)
    GROUP BY STU_NO, STU_NAME, STU_DEPT
    HAVING STU_DEPT = '컴퓨터정보'
);

--34
SELECT STU_NO, STU_NAME
FROM STUDENT 
JOIN (
    SELECT STU_NO
    FROM SUBJECT JOIN ENROL USING (SUB_NO)
    WHERE SUB_NAME = '컴퓨터개론'
) USING(STU_NO)
JOIN (
    SELECT STU_NO
    FROM SUBJECT JOIN ENROL USING (SUB_NO)
    WHERE SUB_NAME = '시스템분석설계'
) USING(STU_NO)
ORDER BY STU_NO;