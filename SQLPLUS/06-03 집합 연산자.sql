--UNION/UNION ALL/INTERSCECT/MINUS

--기계과 학생과 전기전자 학생 출력
SELECT *
FROM STUDENT
WHERE STU_DEPT IN ('기계', '전기전자');

--UNION
--겹치는 건 한개만 출력
SELECT *
FROM STUDENT
WHERE STU_DEPT = '기계'
UNION
SELECT *
FROM STUDENT
WHERE STU_DEPT = '전기전자';

--UNION ALL
--겹치는 것까지 출력
--UNION ALL != FULL OUTER JOIN 
SELECT *
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보'
UNION ALL
SELECT *
FROM STUDENT
WHERE STU_GRADE = 2;

--MINUS
--컴정인데 2학년이 아닌 학생들
SELECT *
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보'
MINUS
SELECT *
FROM STUDENT
WHERE STU_GRADE = 2;

--INTERSECT
--컴정인데 2학년인 학생만
SELECT *
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보'
INTERSECT
SELECT *
FROM STUDENT
WHERE STU_GRADE = 2;

--SALES 부서와 RESEARCH 부서에 근무중인 사원 정보를 모두 출력
--서브쿼리
SELECT *
FROM EMP
WHERE DEPTNO IN (
    SELECT DEPTNO
    FROM DEPT
    WHERE DNAME = 'SALES'
    OR DNAME = 'RESEARCH'
);
--집합 연산자
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
FROM EMP JOIN DEPT USING(DEPTNO)
WHERE DNAME = 'SALES'
UNION
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
FROM EMP JOIN DEPT USING(DEPTNO)
WHERE DNAME = 'RESEARCH'
ORDER BY 1;
--집합 연산자 구문에서 
--ORDER BY를 사용할 시에는 SELECT에 선정되어있는 ATTRIBUTE만 사용 가능?

--SALESMAN 이지만, 보너스를 받지 않는 사원의 정보를 출력
SELECT *
FROM EMP
WHERE COMM IS NULL
AND JOB = 'SALESMAN';

SELECT *
FROM EMP
WHERE COMM IS NULL
INTERSECT
SELECT *
FROM EMP
WHERE JOB = 'SALESMAN';

SELECT *
FROM EMP
WHERE JOB = 'SALESMAN'
MINUS
SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

